#!/bin/bash
# Create by Pawat Saengduan

# Setup Variables
SHELL=/bin/bash
VERSION=1.0
EDITION=FULLRELEASE
osver16=`lsb_release -a 2>/dev/null | grep -i 'xenial' 2>/dev/null`
osver18=`lsb_release -a 2>/dev/null | grep -i 'bionic' 2>/dev/null`
numberproc=`nproc`

# Need Sudo
needSudo=`sudo apt-get help 2>/dev/null`

## <<FUNCTIONS
# Confirm Restart Functions
confirmRestart() {
	read -r -p "Do you want to restart your terminal right now? [Y/n] " RESTARTING
	case "$RESTARTING" in
		[yY][eE][sS] | [yY] ) echo "[INSTALLER] Complete Install!" && source ~/.bashrc && reset && clear && exit 0;;
		[nN][oO] | [nN] | [aA][bB][oO][rR][tT] | * ) echo "[INSTALLER] Complete Install!, Please re-source .bashrc or restart terminal!";;
	esac
}

# Install ROS Functions
rosInstaller() {
	echo "There are 2 choices to install ROS (providing /opt/ros)."
	echo
	echo "  Selection    ROS Distro        Linux Distro       Status"
	echo "-------------------------------------------------------"
	if [[ $osver16 =~ "xenial" ]]; then
		echo "* 0            Kinetic Kame       Xenial (16.04)    auto mode"
		echo "  1            Melodic Morenia    Bionic (18.04)    manual mode"
	elif [[ $osver18 =~ "bionic" ]]; then
		echo "  0            Kinetic Kame       Xenial (16.04)    manual mode"
		echo "* 1            Melodic Morenia    Bionic (18.04)    auto mode"
	else
		echo "  No, Options!"
		echo "  Sorry, Your OS is not supported!"
		echo
		echo "  Supported OS is: "
				echo "  - Ubuntu 16.04 LTS (Xenial)  >>>  ROS Kinetic Kame"
				echo "  - Ubuntu 18.04 LTS (Bionic)  >>>  ROS Melodic Morenia"
		exit 1
	fi
	echo

	read -p "Press <enter> to keep the current choice[*], or type selection number: " ROSSELECTION

	while [[ $ROSSELECTION != 1 && $ROSSELECTION != 0 && -n $ROSSELECTION ]]; do
		echo "There are 2 choices to install ROS (providing /opt/ros)."
		echo
		echo "  Selection    ROS Distro        Linux Distro       Status"
		echo "-------------------------------------------------------"
		if [[ $osver16 =~ "xenial" ]]; then
			echo "* 0            Kinetic Kame       Xenial (16.04)    auto mode"
			echo "  1            Melodic Morenia    Bionic (18.04)    manual mode"
		elif [[ $osver18 =~ "bionic" ]]; then
			echo "  0            Kinetic Kame       Xenial (16.04)    manual mode"
			echo "* 1            Melodic Morenia    Bionic (18.04)    auto mode"
		fi
		echo
		read -p "Press <enter> to keep the current choice[*], or type selection number: " ROSSELECTION
		if [[ $ROSSELECTION == 1 || $ROSSELECTION == 0 || -z $ROSSELECTION ]]; then
			break;
		fi
	done;

	while true; do
		if [[ $osver16 =~ "xenial" ]]; then
			if [[ $ROSSELECTION == 0 || -z $ROSSELECTION ]]; then
				echo
				echo
				echo "[INFO] OS Distro         >>> Xenial"
				echo "[INFO] ROS Distro        >>> Kinetic Kame"
				echo "[INFO] Catkin Workspace  >>> $HOME/catkin_ws"
				echo "[NOTE] For Computer"
				echo
				echo "PRESS [ENTER] TO CONTINUE THE INSTALLATION"
				echo "IF YOU WANT TO CANCEL, PRESS [CTRL] + [C]"
				read

				echo "[APT-MANAGER] update the package and upgrade"
				sudo apt-get update --assume-yes
				sudo apt-get upgrade --assume-yes
				sudo apt-get dist-upgrade --assume-yes
				sudo apt-get autoremove --purge --assume-yes

				echo
				echo "[APT-MANAGER & NTPDATE] install build environment, chrony, ntpdate and set ntpdate"
				sudo apt-get install git curl chrony ntpdate build-essential --assume-yes
				sudo ntpdate ntp.ubuntu.com

				echo
				echo "[APT-MANAGER] add the ros repository"
				if [ ! -e /etc/apt/sources.list.d/ros-latest.list ]; then
					sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list"
				fi

				echo "[APT-MANAGER] download ros key"
				roskey=`sudo apt-key list | grep "Open Robotics"`
				if [ -z "$roskey" ]; then
						sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 2>/dev/null || curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add - 2>/dev/null
				fi

				echo "[APT-MANAGER] checking the ros keys"
				roskey=`apt-key list | grep "Open Robotics"`
				if [ -n "$roskey" ]; then
						echo "[INSTALLER] ros was exists in the key lists"
				else
						echo "[INSTALLER] ros keys not in the key lists, abort the installation"
						exit 2
				fi

				echo
				echo "[APT-MANAGER] update the package and upgrade"
				sudo apt-get update --assume-yes
				sudo apt-get upgrade --assume-yes

				echo
				echo "[APT-MANAGER & ROS] install ros kinetic desktop full and ros kinetic rqt"
				sudo apt-get install ros-kinetic-desktop-full* ros-kinetic-rqt* --assume-yes

				echo
				echo "[ROSDEP] initialize rosdep"
				if [ -e /etc/ros/rosdep/sources.list.d/20-default.list ]; then
					sudo sh -c "rosdep init"
				fi
				echo "[ROSDEP] update ros distro list"
				rosdep update

				echo
				echo "[BASH & ROS] setup ros environment and getting rosinstall"
				source /opt/ros/kinetic/setup.sh
				sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential --assume-yes

				echo
				echo "[CATKIN WORKSPACE] create the catkin workspace"
				if [ ! -d catkin_ws/src ]; then
					mkdir -p $HOME/catkin_ws/src
				fi
				cd $HOME/catkin_ws/src
				/opt/ros/kinetic/bin/catkin_init_workspace
				cd $HOME/catkin_ws
				/opt/ros/kinetic/bin/catkin_make -j$numberproc
				/opt/ros/kinetic/bin/catkin_make -j$numberproc install

				echo
				echo "[ROS] setup the ros environment"
				sh -c "echo \"alias eb='/bin/nano $HOME/.bashrc'\" >> ~/.bashrc"
				sh -c "echo \"alias sb='source $HOME/.bashrc'\" >> ~/.bashrc"
				sh -c "echo \"alias gc='/usr/bin/git clone'\" >> ~/.bashrc"
				sh -c "echo \"alias gs='/usr/bin/git status'\" >> ~/.bashrc"
				sh -c "echo \"alias gp='/usr/bin/git pull'\" >> ~/.bashrc"
				sh -c "echo \"alias cw='cd $HOME/catkin_ws'\" >> ~/.bashrc"
				sh -c "echo \"alias cs='cd $HOME/catkin_ws/src'\" >> ~/.bashrc"
				sh -c "echo \"alias cm='cd $HOME/catkin_ws && /opt/ros/kinetic/bin/catkin_make -j$numberproc && source $HOME/catkin_ws/devel/setup.bash'\" >> ~/.bashrc"
				sh -c "echo \"alias cmi='cd $HOME/catkin_ws && /opt/ros/kinetic/bin/catkin_make -j$numberproc install && source $HOME/catkin_ws/devel/setup.bash'\" >> ~/.bashrc"
				sh -c "echo \"alias cmiso='cd $HOME/catkin_ws && /opt/ros/kinetic/bin/catkin_make_isolated -j$numberproc && source $HOME/catkin_ws/devel/setup.bash'\" >> ~/.bashrc"

				sh -c "echo \"source /opt/ros/kinetic/setup.bash\" >> ~/.bashrc"
				sh -c "echo \"source $HOME/catkin_ws/devel/setup.bash\" >> ~/.bashrc"

				sh -c "echo \"export ROS_MASTER_URI=http://localhost:11311\" >> ~/.bashrc"
				sh -c "echo \"export ROS_HOSTNAME=localhost\" >> ~/.bashrc"
				echo "[BASH & ROS] ros was exists in environment"

				source $HOME/.bashrc

				echo
				echo
				confirmRestart

				exit 0
			elif [[ $ROSSELECTION == 1 ]]; then
				echo "[INSTALLER] Sorry, Your Ubuntu $(lsb_release -sc) not compatible with ROS Melodic Morenia!"
			fi
		fi

		if [[ $osver18 =~ "bionic" ]]; then
			if [[ $ROSSELECTION == 1 || -z $ROSSELECTION ]]; then
				echo
				echo
				echo "[INFO] OS Distro         >>> Bionic"
				echo "[INFO] ROS Distro        >>> Melodic Morenia"
				echo "[INFO] Catkin Workspace  >>> $HOME/catkin_ws"
				echo "[NOTE] For Computer"

				echo
				echo "PRESS [ENTER] TO CONTINUE THE INSTALLATION"
				echo "IF YOU WANT TO CANCEL, PRESS [CTRL] + [C]"
				read

				echo "[APT-MANAGER] update the package and upgrade"
				sudo apt-get update --assume-yes
				sudo apt-get upgrade --assume-yes
				sudo apt-get dist-upgrade --assume-yes
				sudo apt-get autoremove --purge --assume-yes

				echo
				echo "[APT-MANAGER & NTPDATE] install build environment, chrony, ntpdate and set ntpdate"
				sudo apt-get install git curl chrony ntpdate build-essential --assume-yes
				sudo ntpdate ntp.ubuntu.com

				echo "[APT-MANAGER] add the ros repository"
				if [ ! -e /etc/apt/sources.list.d/ros-latest.list ]; then
					sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list"
				fi

				echo "[APT-MANAGER] download ros key"
				roskey=`sudo apt-key list | grep "Open Robotics"`
				if [ -z "$roskey" ]; then
						sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 2>/dev/null || curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add - 2>/dev/null
				fi

				echo "[APT-MANAGER] checking the ros keys"
				roskey=`apt-key list | grep "Open Robotics"`
				if [ -n "$roskey" ]; then
						echo "[INFO CHECK] ros was exists in the key lists"
				else
						echo "[INSTALLER] ros keys not in the key lists, abort the installation"
						exit 2
				fi

				echo
				echo "[APT-MANAGER] update the package and upgrade"
				sudo apt-get update --assume-yes
				sudo apt-get upgrade --assume-yes

				echo
				echo "[APT-MANAGER & ROS] install ros kinetic desktop full and ros kinetic rqt"
				sudo apt-get install ros-melodic-desktop-full ros-melodic-rqt-* --assume-yes

				echo
				echo "[ROSDEP] initialize rosdep"
				if [ -e /etc/ros/rosdep/sources.list.d/20-default.list ]; then
					sudo sh -c "rosdep init"
				fi
				rosdep update

				echo
				echo "[BASH & ROS] setup ros environment and getting rosinstall"
				source /opt/ros/melodic/setup.sh
				sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential --assume-yes

				echo
				echo "[CATKIN WORKSPACE] create the catkin workspace"
				if [ ! -d catkin_ws/src ]; then
					mkdir -p $HOME/catkin_ws/src
				fi
				cd $HOME/catkin_ws/src
				/opt/ros/melodic/bin/catkin_init_workspace
				cd $HOME/catkin_ws
				/opt/ros/melodic/bin/catkin_make -j$numberproc
				/opt/ros/melodic/bin/catkin_make -j$numberproc install
	 
				echo
				echo "[ROS] setup the ros environment"
				sh -c "echo \"alias eb='/bin/nano $HOME/.bashrc'\" >> ~/.bashrc"
				sh -c "echo \"alias sb='source $HOME/.bashrc'\" >> ~/.bashrc"
				sh -c "echo \"alias gc='/usr/bin/git clone'\" >> ~/.bashrc"
				sh -c "echo \"alias gs='/usr/bin/git status'\" >> ~/.bashrc"
				sh -c "echo \"alias gp='/usr/bin/git pull'\" >> ~/.bashrc"
				sh -c "echo \"alias cw='cd $HOME/catkin_ws'\" >> ~/.bashrc"
				sh -c "echo \"alias cs='cd $HOME/catkin_ws/src'\" >> ~/.bashrc"
				sh -c "echo \"alias cm='cd $HOME/catkin_ws && /opt/ros/melodic/bin/catkin_make -j$numberproc && source $HOME/catkin_ws/devel/setup.bash'\" >> ~/.bashrc"
				sh -c "echo \"alias cmi='cd $HOME/catkin_ws && /opt/ros/melodic/bin/catkin_make -j$numberproc install && source $HOME/catkin_ws/devel/setup.bash'\" >> ~/.bashrc"
				sh -c "echo \"alias cmiso='cd $HOME/catkin_ws && /opt/ros/melodic/bin/catkin_make_isolated -j$numberproc && source $HOME/catkin_ws/devel/setup.bash'\" >> ~/.bashrc"

				sh -c "echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc"
				sh -c "echo \"source $HOME/catkin_ws/devel/setup.bash\" >> ~/.bashrc"

				sh -c "echo \"export ROS_MASTER_URI=http://localhost:11311\" >> ~/.bashrc"
				sh -c "echo \"export ROS_HOSTNAME=localhost\" >> ~/.bashrc"
				echo "[BASH & ROS] ros was exists in environment"

				source $HOME/.bashrc

				echo
				echo
				confirmRestart
				exit 0
			elif [[ $ROSSELECTION == 0 ]]; then
				echo "[INSTALLER] Sorry, Your Ubuntu $(lsb_release -sc) not compatible with ROS Kinetic Kame!"
			fi
		fi
	break;
	done;
}

# Uninstall ROS Functions
rosUninstall() {
	echo
	echo
	echo "[NOTE] This uninstaller not remove catkin workspace"
	echo "[NOTE] This uninstaller not remove environment in .bashrc"
	echo "[NOTE] If you want to remove. Please manually remove"
	echo
	echo "PRESS [ENTER] TO CONTINUE THE UNINSTALLATION"
	echo "IF YOU WANT TO CANCEL, PRESS [CTRL] + [C]"
	echo
	echo "[UNINSTALER] Uninstalling ROS... "
	sudo apt-get purge ros-melodic* --assume-yes 2>/dev/null
	sudo apt-get purge ros-kinetic* --assume-yes 2>/dev/null
	echo "[UNINSTALER] Complete Uninstall ROS!!"
	confirmRestart
	exit 0
}
## FUNCTIONS>>

# Usage output
usage() {
	cat <<EOF
ROS Installer $VERSION
Usage: ROS Installer [-v|-i|-h|-u]

EOF
}

# Help output
help() {
	cat <<EOF
ROS Installer $VERSION
Usage: Ros-Installer [options]

ROS Installer is a tool to install ROS easy with this file.
So you can install or uninstall ROS that you want.

Available commands:
  h, help, -h, --help              See help in ros installer
  v, version, -v, --version        See ros installer version
  i, install, -i, --install        Install ROS
  u, uninstall, -u, --uninstall   Uninstall ROS

EOF
}

# Case agruments selection
case "$1" in
	h|-h|--help|help) help;;
	v|-v|--version|version) echo "ROS Installer v.$VERSION";;
	i|-i|--install|install) rosInstaller;;
	u|-u|--uninstall|uninstall) Uninstall;;
	*) usage && echo "See \"./Ros-Installer -h\" for more usage";;
esac
