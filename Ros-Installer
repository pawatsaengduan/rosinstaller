#!/bin/bash
# Create by Pawat Saengduan

# Setup Variables
SHELL=/bin/bash
VERSION=1.3
EDITION=BETA
osver16=`lsb_release -a 2>/dev/null | grep -o 'xenial' 2>/dev/null`
osver18=`lsb_release -a 2>/dev/null | grep -o 'bionic' 2>/dev/null`
numberproc=`nproc`
command_status="\u274c"	

# Need Sudo
echo "[INSTALLER] INSTALL DEPENDENCIES LIBRARIES"
needSudo1=`sudo apt-get install notify-osd pulseaudio-utils libnotify-bin --assume-yes 2>/dev/null` || ErrorTrue
needSudo2=`sudo apt-get install libnotify-bin notify-osd --assume-yes --reinstall 2>/dev/null` || ErrorTrue
## <<FUNCTIONS
# DownloadKeys
DownloadKeys() {
	sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 || curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add -
}

# ErrorTrue
ErrorTrue() {
	notify-send "ROS Installer $(echo -e $command_status)" \
	  	"An error was occurred, Please try again later" \
		-i utilities-terminal \
        -t 5000
	exit 127
}

# Confirm Restart Functions
confirmRestartInstall() {
	command_status="\u2705"
	notify-send "ROS Installer $(echo -e $command_status)" \
	  "Install Complete" \
	  -i utilities-terminal \
      -t 3800
	read -r -p "Do you want to exit your terminal right now? [Y/n] " RESTARTING
	if [ -e /opt/ros/kinetic/setup.bash ]; then
		case "$RESTARTING" in
			[yY][eE][sS] | [yY] ) echo "[INSTALLER] Complete Install!" && source $HOME/.bashrc && reset && source /opt/ros/kinetic/setup.bash && clear && exit 0;;
			[nN][oO] | [nN] | [aA][bB][oO][rR][tT] | * ) echo "[INSTALLER] Complete Install!, Please re-source .bashrc or restart terminal!";;
		esac
	elif [ -e /opt/ros/melodic/setup.bash ]; then
		case "$RESTARTING" in
			[yY][eE][sS] | [yY] ) echo "[INSTALLER] Complete Install!" && source $HOME/.bashrc && reset && source /opt/ros/melodic/setup.bash && clear && exit 0;;
			[nN][oO] | [nN] | [aA][bB][oO][rR][tT] | * ) echo "[INSTALLER] Complete Install!, Please re-source .bashrc or restart terminal!";;
		esac
	else
	fi

}

confirmRestartUninstall() {
	command_status="\u2705"
	notify-send "ROS Installer $(echo -e $command_status)" \
	  "Uninstall Complete" \
	  -i utilities-terminal \
      -t 3800
	read -r -p "Do you want to restart your terminal right now? [Y/n] " RESTARTING
	case "$RESTARTING" in
		[yY][eE][sS] | [yY] ) echo "[INSTALLER] Complete Uninstall!" && source $HOME/.bashrc && reset && clear && exit 0;;
		[nN][oO] | [nN] | [aA][bB][oO][rR][tT] | * ) echo "[INSTALLER] Complete Uninstall!, Please re-source .bashrc or restart terminal!";;
	esac
}

# Install ROS Functions
rosInstaller() {
	echo "There are 2 choices to install ROS (providing /opt/ros)."
	echo
	echo "  Selection    ROS Distro        Linux Distro       Status"
	echo "-------------------------------------------------------"
	if [[ $osver16 == "xenial" || $osver16 == "sylvia" || $osver16 == "sonya" || $osver16 == "serena" || $osver16 == "sarah" ]]; then
		echo "* 0            Kinetic Kame       Xenial (16.04)    auto mode"
		echo "  1            Melodic Morenia    Bionic (18.04)    manual mode"
	elif [[ $osver18 == "bionic" || $osver18 == "trica" || $osver18 == "tina" || $osver18 == "tessa" || $osver18 == "tara" ]]; then
		echo "  0            Kinetic Kame       Xenial (16.04)    manual mode"
		echo "* 1            Melodic Morenia    Bionic (18.04)    auto mode"
	else
		echo "  No, Options!"
		echo "  Sorry, Your OS is not supported!"
		echo
		echo "  + Supported OS is: "
		echo "  |"
		echo "  |-- + Ubuntu Distribution: "
		echo "  |   |"
		echo "  |   |-- Ubuntu 16.04 LTS (Xenial)  >>>  ROS Kinetic Kame"
		echo "  |   |-- Ubuntu 18.04 LTS (Bionic)  >>>  ROS Melodic Morenia"
		echo "  |"
		echo "  |-- + Linux Mint Distribution: ( Installer is not supported right now. )"
		echo "      |"
		echo "      |-- Linux Mint 18.x  (Ubuntu Distro Xenial)  >>>  ROS Kinetic Kame"
		echo "      |-- Linux Mint 19.x  (Ubuntu Distro Bionic)  >>>  ROS Melodic Morenia"
		echo
		notify-send "ROS Installer $(echo -e $command_status)" \
		  "Your OS not compatible with ROS" \
		  -i utilities-terminal \
          -t 5000

		exit 1
	fi
	echo

	read -p "Press <enter> to keep the current choice[*], or type selection number: " ROSSELECTION

	while [[ $ROSSELECTION != 1 && $ROSSELECTION != 0 && -n $ROSSELECTION ]]; do
		notify-send "ROS Installer $(echo -e $command_status)" \
		  "Please insert selection" \
		  -i utilities-terminal \
          -t 2500
		echo "There are 2 choices to install ROS (providing /opt/ros)."
		echo
		echo "  Selection    ROS Distro        Linux Distro       Status"
		echo "-------------------------------------------------------"
		if [[ $osver16 == "xenial" || $osver16 == "sylvia" || $osver16 == "sonya" || $osver16 == "serena" || $osver16 == "sarah" ]]; then
			echo "* 0            Kinetic Kame       Xenial (16.04)    auto mode"
			echo "  1            Melodic Morenia    Bionic (18.04)    manual mode"
		elif [[ $osver18 == "bionic" || $osver18 == "trica" || $osver18 == "tina" || $osver18 == "tessa" || $osver18 == "tara" ]]; then
			echo "  0            Kinetic Kame       Xenial (16.04)    manual mode"
			echo "* 1            Melodic Morenia    Bionic (18.04)    auto mode"
		fi
		echo
		read -p "Press <enter> to keep the current choice[*], or type selection number: " ROSSELECTION
		if [[ $ROSSELECTION == 1 || $ROSSELECTION == 0 || -z $ROSSELECTION ]]; then
			break;
		fi
	done;

	while true; do
		if [[ $osver16 == "xenial" || $osver16 == "sylvia" || $osver16 == "sonya" || $osver16 == "serena" || $osver16 == "sarah" ]]; then
			if [[ $ROSSELECTION == 0 || -z $ROSSELECTION ]]; then
				echo
				echo
				echo "[NOTE] OS Distro         >>> Xenial Xerus"
				echo "[NOTE] ROS Distro        >>> Kinetic Kame"
				echo "[NOTE] Catkin Workspace  >>> $HOME/catkin_ws"
				echo
				echo "PRESS [ENTER] TO CONTINUE THE INSTALLATION"
				echo "IF YOU WANT TO CANCEL, PRESS [CTRL] + [C]"
				read

				echo "[INFO] Update and Upgrade the packages"
				sudo apt-get update --assume-yes || ErrorTrue
				sudo apt-get upgrade --assume-yes || ErrorTrue
				sudo apt-get dist-upgrade --assume-yes || ErrorTrue
				sudo apt-get autoremove --purge --assume-yes || ErrorTrue

				echo
				echo "[INFO] Install an Optional dependencies"
				sudo apt-get install git curl chrony ntpdate build-essential --assume-yes || ErrorTrue
				sudo ntpdate ntp.ubuntu.com || ErrorTrue

				echo
				echo "[INFO] Add the ROS Repository"
				if [ ! -e /etc/apt/sources.list.d/ros-latest.list ]; then
					sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list" || ErrorTrue
				fi

				echo "[INFO] Checking the ROS Keys"
				roskey=`sudo apt-key list | grep "Open Robotics"`
				if [ -z "$roskey" ]; then
					echo "[INFO] Not Found, Download ROS Keys..."
					DownloadKeys || ErrorTrue
				elif [ -n "$roskey" ]; then
					echo "[INFO] Now ROS was exists in the key lists"
				fi

				echo
				echo "[INFO] Update and Upgrade the packages"
				sudo apt-get update --assume-yes || ErrorTrue
				sudo apt-get upgrade --assume-yes || ErrorTrue

				echo
				echo "[INFO] Install ROS Kinetic as Full Desktop & All ROS rqt"
				sudo apt-get install ros-kinetic-desktop-full* ros-kinetic-rqt* --assume-yes || ErrorTrue

				echo
				echo "[INFO] Initialize rosdep"
				if [ -e /etc/ros/rosdep/sources.list.d/20-default.list ]; then
					sudo sh -c "rosdep init"
				fi

				echo
				echo "[INFO] Update rosdep"
				rosdep update

				echo
				echo "[INFO] Getting ROS Dependencies and Get temporary ROS environment"
				source /opt/ros/kinetic/setup.bash || ErrorTrue
				sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential --assume-yes || ErrorTrue

				echo
				echo "[INFO] Create the Catkin Workspace"
				if [ ! -d catkin_ws/src ]; then
					mkdir -p $HOME/catkin_ws/src || ErrorTrue
				fi

				cd $HOME/catkin_ws/src || ErrorTrue
				/opt/ros/kinetic/bin/catkin_init_workspace || ErrorTrue
				cd $HOME/catkin_ws || ErrorTrue
				/opt/ros/kinetic/bin/catkin_make -j$numberproc || ErrorTrue
				/opt/ros/kinetic/bin/catkin_make -j$numberproc install || ErrorTrue

				echo
				echo "[INFO] Setting Up ROS Environment"
				sh -c "echo \"\n# ROS Environment\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias eb='/bin/nano $HOME/.bashrc'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias sb='source $HOME/.bashrc'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias gc='/usr/bin/git clone'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias gs='/usr/bin/git status'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias gp='/usr/bin/git pull'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cw='cd $HOME/catkin_ws'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cs='cd $HOME/catkin_ws/src'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cm='export OLDSOURCEPATH=`pwd` && source /opt/ros/kinetic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $HOME/catkin_ws && /opt/ros/kinetic/bin/catkin_make -j$numberproc && source /opt/ros/kinetic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $OLDSOURCEPATH'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cmi='export OLDSOURCEPATH=`pwd` source /opt/ros/kinetic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $HOME/catkin_ws && /opt/ros/kinetic/bin/catkin_make -j$numberproc install && source /opt/ros/kinetic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $OLDSOURCEPATH'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cmiso='export OLDSOURCEPATH=`pwd` source /opt/ros/kinetic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $HOME/catkin_ws && /opt/ros/kinetic/bin/catkin_make_isolated -j$numberproc && source /opt/ros/kinetic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $OLDSOURCEPATH'\" >> $HOME/.bashrc" || ErrorTrue

				sh -c "echo \"source /opt/ros/kinetic/setup.bash\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"source $HOME/catkin_ws/devel/setup.bash\" >> $HOME/.bashrc" || ErrorTrue

				sh -c "echo \"export ROS_MASTER_URI=http://localhost:11311\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"export ROS_HOSTNAME=localhost\" >> $HOME/.bashrc" || ErrorTrue
				echo "[INFO] ROS Environment was exists in the environment"

				source $HOME/.bashrc

				echo
				echo
				confirmRestartInstall

				exit 0
			elif [[ $ROSSELECTION == 1 ]]; then
				command_status="\u274c"
				notify-send "ROS Installer $(echo -e $command_status)" \
		  		  "Your OS not compatible with ROS Melodic Morenia!" \
		  		  -i utilities-terminal \
          		  -t 5000
				echo
				echo "[ERROR] Sorry, Your OS not compatible with ROS Melodic Morenia!"
			fi
		fi

		if [[ $osver18 == "bionic" || $osver18 == "trica" || $osver18 == "tina" || $osver18 == "tessa" || $osver18 == "tara" ]]; then
			if [[ $ROSSELECTION == 1 || -z $ROSSELECTION ]]; then
				echo
				echo
				echo "[NOTE] OS Distro         >>> Bionic Beaver"
				echo "[NOTE] ROS Distro        >>> Melodic Morenia"
				echo "[NOTE] Catkin Workspace  >>> $HOME/catkin_ws"

				echo
				echo "PRESS [ENTER] TO CONTINUE THE INSTALLATION"
				echo "IF YOU WANT TO CANCEL, PRESS [CTRL] + [C]"
				read

				echo "[INFO] Update and Upgrade the packages"
				sudo apt-get update --assume-yes || ErrorTrue
				sudo apt-get upgrade --assume-yes || ErrorTrue
				sudo apt-get dist-upgrade --assume-yes || ErrorTrue
				sudo apt-get autoremove --purge --assume-yes || ErrorTrue

				echo
				echo "[INFO] Install an Optional dependencies"
				sudo apt-get install git curl chrony ntpdate build-essential --assume-yes || ErrorTrue
				sudo ntpdate ntp.ubuntu.com || ErrorTrue

				echo
				echo "[INFO] Add the ROS Repository"
				if [ ! -e /etc/apt/sources.list.d/ros-latest.list ]; then
					sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list" || ErrorTrue
				fi

				echo "[INFO] Checking the ROS Keys"
				roskey=`sudo apt-key list | grep "Open Robotics"`
				if [ -z "$roskey" ]; then
					echo "[INFO] Not Found, Download ROS Keys..."
					DownloadKeys || ErrorTrue
				elif [ -n "$roskey" ]; then
					echo "[INFO] Now ROS was exists in the key lists"
				fi

				echo
				echo "[INFO] Update and Upgrade the packages"
				sudo apt-get update --assume-yes || ErrorTrue
				sudo apt-get upgrade --assume-yes || ErrorTrue

				echo
				echo "[INFO] Install ROS Melodic as Full Desktop & All ROS rqt"
				sudo apt-get install ros-melodic-desktop-full ros-melodic-rqt-* --assume-yes || ErrorTrue

				echo
				echo "[INFO] Initialize rosdep"
				if [ -e /etc/ros/rosdep/sources.list.d/20-default.list ]; then
					sudo sh -c "rosdep init"
				fi
				
				echo
				echo "[INFO] Update rosdep"
				rosdep update

				echo
				echo "[INFO] Getting ROS Dependencies and Get temporary ROS environment"
				source /opt/ros/melodic/setup.bash || ErrorTrue
				sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential --assume-yes || ErrorTrue

				echo
				echo "[INFO] Create the Catkin Workspace"
				if [ ! -d catkin_ws/src ]; then
					mkdir -p $HOME/catkin_ws/src || ErrorTrue
				fi

				cd $HOME/catkin_ws/src || ErrorTrue
				/opt/ros/melodic/bin/catkin_init_workspace
				cd $HOME/catkin_ws || ErrorTrue
				/opt/ros/melodic/bin/catkin_make -j$numberproc || ErrorTrue
				/opt/ros/melodic/bin/catkin_make -j$numberproc install || ErrorTrue

				echo
				echo "[INFO] Setting Up ROS Environment"
				sh -c "echo \"\n# ROS Environment\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias eb='/bin/nano $HOME/.bashrc'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias sb='source $HOME/.bashrc'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias gc='/usr/bin/git clone'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias gs='/usr/bin/git status'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias gp='/usr/bin/git pull'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cw='cd $HOME/catkin_ws'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cs='cd $HOME/catkin_ws/src'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cm='source /opt/ros/melodic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $HOME/catkin_ws && /opt/ros/melodic/bin/catkin_make -j$numberproc && source /opt/ros/melodic/setup.bash && source $HOME/catkin_ws/devel/setup.bash'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cmi='source /opt/ros/melodic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $HOME/catkin_ws && /opt/ros/melodic/bin/catkin_make -j$numberproc install && source /opt/ros/melodic/setup.bash && source $HOME/catkin_ws/devel/setup.bash'\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"alias cmiso='source /opt/ros/melodic/setup.bash && source $HOME/catkin_ws/devel/setup.bash && cd $HOME/catkin_ws && /opt/ros/melodic/bin/catkin_make_isolated -j$numberproc && source /opt/ros/melodic/setup.bash && source $HOME/catkin_ws/devel/setup.bash'\" >> $HOME/.bashrc" || ErrorTrue

				sh -c "echo \"source /opt/ros/melodic/setup.bash\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"source $HOME/catkin_ws/devel/setup.bash\" >> $HOME/.bashrc" || ErrorTrue

				sh -c "echo \"export ROS_MASTER_URI=http://localhost:11311\" >> $HOME/.bashrc" || ErrorTrue
				sh -c "echo \"export ROS_HOSTNAME=localhost\" >> $HOME/.bashrc" || ErrorTrue
				echo "[INFO] ROS Environment was exists in the environment"

				source $HOME/.bashrc

				echo
				echo
				confirmRestartInstall || ErrorTrue
				exit 0
			elif [[ $ROSSELECTION == 0 ]]; then
				command_status="\u274c"
				notify-send "ROS Installer $(echo -e $command_status)" \
		  		  "Your OS not compatible with ROS melodic Kame!" \
		  		  -i utilities-terminal \
          		  -t 5000
				echo
				echo "[ERROR] Sorry, Your OS not compatible with ROS melodic Kame!"
			fi
		fi
	break;
	done;
}

# Uninstall ROS Functions
rosUninstall() {
	echo
	echo
	echo "[NOTE] This uninstaller not remove catkin workspace"
	echo "[NOTE] This uninstaller not remove environment in .bashrc"
	echo "[NOTE] If you want to remove. Please manually remove"
	echo
	echo "PRESS [ENTER] TO CONTINUE THE UNINSTALLATION"
	echo "IF YOU WANT TO CANCEL, PRESS [CTRL] + [C]"
	echo
	echo "[UNINSTALER] Uninstalling ROS... "
	sudo apt-get remove ros-melodic* --purge --assume-yes 2>/dev/null || ErrorTrue
	sudo apt-get purge ros-kinetic* --purge --assume-yes 2>/dev/null || ErrorTrue
	sudo apt-get autoremove --purge --assume-yes 2>/dev/null
	echo "[UNINSTALER] Complete Uninstall ROS!!"
	confirmRestartUninstall
	exit 0
}
## FUNCTIONS>>

# Usage output
usage() {
	cat <<EOF
ROS Installer $VERSION
Usage: ROS Installer [-v|-h|-i|-u]

EOF
}

# Help output
help() {
	cat <<EOF
ROS Installer $VERSION $EDITION
Usage: Ros-Installer [options]

ROS Installer is a tool to install ROS by run once time.

Available commands:
  h, help, -h, --help              See help in ros installer
  v, version, -v, --version        See ros installer version
  i, install, -i, --install        Install ROS
  u, uninstall, -u, --uninstall   Uninstall ROS

EOF
}

# Case agruments selection
case "$1" in
	h|-h|--help|help) help;;
	v|-v|--version|version) echo "ROS Installer v.$VERSION";;
	i|-i|--install|install) rosInstaller;;
	u|-u|--uninstall|uninstall) rosUninstall;;
	*) usage && echo "See \"./Ros-Installer --help\" for more usage";;
esac
